===== THE REACT USEEFFECT HOOK =========================================================================

- THIS TELLS REACT THAT A COMPONENT NEEDS TO DO 
SOMETHING AFTER THE DOM RENDERS/UPDATES.

- BY DEFAULT, IT RUNS AFTER EVERY RENDER/UPDATE.

- IT IS WRITTEN INSIDE A COMPONENT SO THAT IT 
CAN ACCESS ANY PROPS DEFINED WITHIN THE FUNCTION 
SCOPE FOR THE COMPONENT

import { useEffect } from "react"

const Component = ({ props }) => {

useEffect(() => {
    EFFECT FUNCTION
}, [DEPENDENCY ARRAY])

return()

}

- INCLUDING THE DEPENDENCY ARRAY IS OPTIONAL

- IF THE VARIABLES IN THE DEPENDENCY ARRAY 
CHANGE, THEN THE EFFECT FUNCTION WILL RUN AGAIN 
AND THE PAGE WILL BE UPDATED


===[ON EVERY RENDER]======================================

useEffect(() => {
    
});

===[ON FIRST RENDER]======================================

useEffect(() => {
    
}, []);

===[ON FIRST RENDER + WHENEVER DEPENDENCY CHANGES]=========

useEffect(() => {
    
}, [name]);


useEffect + setInterval
useEffect + setTimeout
useEffect + fetch


=== REPLACES THE FOLLOWING LIFECYCLE FUNCTIONS IN CLASS COMPONENTS:

- componentDidMount
- componentDidUpdate
- componentWillUnmount





